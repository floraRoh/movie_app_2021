{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/MovieDetail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","url","to","pathname","state","src","alt","map","i","slice","propsTypes","PropTypes","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","setTimeout","this","movie","medium_cover_image","React","Component","Navigator","MovieDetail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d58d5ac.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './About.scss';\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  /** \r\n   * 전송되지 않아도 react-router에 의해 자동으로 넣어지는 4가지  props  (모든 라우터들은 props를 가진다)\r\n   * location, history, match, staticContext \r\n  */\r\n  return(\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.scss\";\r\n\r\n/**\r\n * react-router-dom은 네비게이션을 만들어주는 npm 패키지\r\n */\r\nfunction Movie({ id, year, title, summary, poster, genres, url }) {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: `/Movie/${id}`,\r\n        state: { title, year, summary, poster, genres, url },\r\n      }}\r\n    >\r\n      <div className=\"movies__movies\">\r\n        <div className=\"movies__poster\">\r\n          <img src={poster} alt={title} title={title} />\r\n        </div>\r\n        <div className=\"movies__data\">\r\n          <h3 className=\"movies__title\">{title}</h3>\r\n          <h4 className=\"movies__year\">{year}</h4>\r\n          <ul className=\"genres\">\r\n            {genres.map((genres, i) => (\r\n              <li key={i} className=\"genres__genre\">\r\n                {genres}\r\n              </li>\r\n            ))}\r\n            {/* map에 있는 각각의 item은 key가 필요하다 */}\r\n          </ul>\r\n          <p className=\"movies__summary\">{summary.slice(0, 140) + \"...\"}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nMovie.propsTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.scss\";\r\n\r\nclass Home  extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    /** const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n     * console.log(movies.data.data.movies);\r\n     * 위에껀 너무 나열이야\r\n     *\r\n     * movies 라는 const를 선언할건데 아래처럼 선언이 가능하다.\r\n     */\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    console.log(movies);\r\n    this.setState({ movies, isLoading: false }); // movies(setState의 movies) : movies(axios에서 온 movies) 는 movies로 축약 가능\r\n  };\r\n  async componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ isLoading: false });\r\n    }, 6000);\r\n    /**\r\n     * fetch()\r\n     * fetch가 있지만 axios가 더 좋다한다\r\n     *\r\n     * application은 render한다\r\n     */\r\n    // const movies =axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n    this.getMovies();\r\n  }\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <>\r\n        <section className=\"container\">\r\n          {isLoading ? (\r\n            <div className=\"loader__text\">\"Loading...\"</div>\r\n          ) : (\r\n            <div className=\"movies\">\r\n              {movies.map((movie) => {\r\n                return (\r\n                  <Movie\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    year={movie.year}\r\n                    title={movie.title}\r\n                    summary={movie.summary}\r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                    url={movie.url}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.scss\";\r\n\r\nfunction Navigator() {\r\n  return (\r\n    <div className=\"Navigation\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n      {/* <Link to={{\r\n        pathname: \"/about\",\r\n        state : {\r\n          fromNavigation: true\r\n        }\r\n      }}>About</Link>  => 이런 식으로 props 보낼 수도 있다\r\n      \r\n      */}\r\n      {/* \r\n        Link의 to는 App.js의 path의 값과 같아야 한다.\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\n\r\nclass MovieDetail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      location: {\r\n        state: { title },\r\n      },\r\n    } = this.props;\r\n    console.log(this.props);\r\n    if (true) {\r\n      return (\r\n        <>\r\n          <div className=\"movies_movies\">\r\n            <div className=\"dd\">{/* <img src={loaction.state. } /> */}</div>\r\n            <span>{title}</span>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <div>정보를 찾지 못했습니다.</div>;\r\n    }\r\n  }\r\n}\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\n// import { BrowserRouter, Route } from \"react-router-dom\";\r\nimport About from \"./routes/About\";\r\nimport Home from \"./routes/Home\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport MovieDetail from \"./routes/MovieDetail\";\r\n/**\r\n * BrowserRouter 과 HashRouter 차이\r\n * - HashRouter는 주소창에 /#/ 나옴\r\n * - BrowserRouter는 github pages를 사용할 때 어려운게 있다고 한다. 찾아보기 \r\n */\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      {/* \r\n        1. router 밖에서는 link를 쓸 수 없다\r\n        ==> HashRouter tag 밖에 Navigation tag를 놓으면 작동 X\r\n      */}\r\n      <Navigation />\r\n        <Route path=\"/\" exact={true} component={Home}></Route>\r\n        <Route path=\"/about\" component={About}></Route>\r\n        <Route path=\"/movie/:id\" component={MovieDetail}></Route>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}